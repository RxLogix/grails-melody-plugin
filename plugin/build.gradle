buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}


def versionTxt = file("${rootProject.projectDir}/version.txt")
def versionPlugin = versionTxt.exists() ? versionTxt.text.trim() : '0.1-SNAPSHOT'
def versionDependency = '1.80.0'

group "org.grails.plugins"
version = versionPlugin


apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"

sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    provided "javax.servlet:javax.servlet-api:4.0.1"
    provided 'org.grails:grails-dependencies'
    provided 'org.grails:grails-web-boot'
    provided 'org.springframework.boot:spring-boot-starter-logging'
    testCompile "org.grails:grails-gorm-testing-support:3.2.2"
    testCompile "org.grails:grails-web-testing-support:3.2.2"

    compile "net.bull.javamelody:javamelody-core:${versionDependency}"

}

grailsPublish {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    githubSlug = 'javamelody/grails-melody-plugin'
    license {
        name = 'Apache-2.0'
    }
    title = "JavaMelody Grails Plugin"
    desc = "Integrate JavaMelody monitoring into Grails application."
    developers = [
            liuchao: 'Liu Chao',
            emericvernat: 'Emeric Vernat',
            sergiomichels: 'SÃ©rgio Michels'
    ]
}
